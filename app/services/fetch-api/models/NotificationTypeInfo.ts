/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationTypeInfo
 */
export interface NotificationTypeInfo {
    /**
     * 
     * @type {string}
     * @memberof NotificationTypeInfo
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NotificationTypeInfo
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationTypeInfo
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationTypeInfo
     */
    category?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationTypeInfo
     */
    isBasedOnUserEvent?: boolean;
}

export function NotificationTypeInfoFromJSON(json: any): NotificationTypeInfo {
    return NotificationTypeInfoFromJSONTyped(json, false);
}

export function NotificationTypeInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTypeInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'enabled': !exists(json, 'Enabled') ? undefined : json['Enabled'],
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'isBasedOnUserEvent': !exists(json, 'IsBasedOnUserEvent') ? undefined : json['IsBasedOnUserEvent'],
    };
}

export function NotificationTypeInfoToJSON(value?: NotificationTypeInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Type': value.type,
        'Name': value.name,
        'Enabled': value.enabled,
        'Category': value.category,
        'IsBasedOnUserEvent': value.isBasedOnUserEvent,
    };
}


