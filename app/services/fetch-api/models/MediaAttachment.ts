/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Class MediaAttachment.
 * @export
 * @interface MediaAttachment
 */
export interface MediaAttachment {
    /**
     * Gets or sets the codec.
     * @type {string}
     * @memberof MediaAttachment
     */
    codec?: string | null;
    /**
     * Gets or sets the codec tag.
     * @type {string}
     * @memberof MediaAttachment
     */
    codecTag?: string | null;
    /**
     * Gets or sets the comment.
     * @type {string}
     * @memberof MediaAttachment
     */
    comment?: string | null;
    /**
     * Gets or sets the index.
     * @type {number}
     * @memberof MediaAttachment
     */
    index?: number;
    /**
     * Gets or sets the filename.
     * @type {string}
     * @memberof MediaAttachment
     */
    fileName?: string | null;
    /**
     * Gets or sets the MIME type.
     * @type {string}
     * @memberof MediaAttachment
     */
    mimeType?: string | null;
    /**
     * Gets or sets the delivery URL.
     * @type {string}
     * @memberof MediaAttachment
     */
    deliveryUrl?: string | null;
}

export function MediaAttachmentFromJSON(json: any): MediaAttachment {
    return MediaAttachmentFromJSONTyped(json, false);
}

export function MediaAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaAttachment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'codec': !exists(json, 'Codec') ? undefined : json['Codec'],
        'codecTag': !exists(json, 'CodecTag') ? undefined : json['CodecTag'],
        'comment': !exists(json, 'Comment') ? undefined : json['Comment'],
        'index': !exists(json, 'Index') ? undefined : json['Index'],
        'fileName': !exists(json, 'FileName') ? undefined : json['FileName'],
        'mimeType': !exists(json, 'MimeType') ? undefined : json['MimeType'],
        'deliveryUrl': !exists(json, 'DeliveryUrl') ? undefined : json['DeliveryUrl'],
    };
}

export function MediaAttachmentToJSON(value?: MediaAttachment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Codec': value.codec,
        'CodecTag': value.codecTag,
        'Comment': value.comment,
        'Index': value.index,
        'FileName': value.fileName,
        'MimeType': value.mimeType,
        'DeliveryUrl': value.deliveryUrl,
    };
}


