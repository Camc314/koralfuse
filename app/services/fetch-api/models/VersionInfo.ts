/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Class PackageVersionInfo.
 * @export
 * @interface VersionInfo
 */
export interface VersionInfo {
    /**
     * Gets or sets the version.
     * @type {string}
     * @memberof VersionInfo
     */
    version?: string | null;
    /**
     * Gets or sets the changelog for this version.
     * @type {string}
     * @memberof VersionInfo
     */
    changelog?: string | null;
    /**
     * Gets or sets the ABI that this version was built against.
     * @type {string}
     * @memberof VersionInfo
     */
    targetAbi?: string | null;
    /**
     * Gets or sets the source URL.
     * @type {string}
     * @memberof VersionInfo
     */
    sourceUrl?: string | null;
    /**
     * Gets or sets a checksum for the binary.
     * @type {string}
     * @memberof VersionInfo
     */
    checksum?: string | null;
    /**
     * Gets or sets a timestamp of when the binary was built.
     * @type {string}
     * @memberof VersionInfo
     */
    timestamp?: string | null;
}

export function VersionInfoFromJSON(json: any): VersionInfo {
    return VersionInfoFromJSONTyped(json, false);
}

export function VersionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'changelog': !exists(json, 'changelog') ? undefined : json['changelog'],
        'targetAbi': !exists(json, 'targetAbi') ? undefined : json['targetAbi'],
        'sourceUrl': !exists(json, 'sourceUrl') ? undefined : json['sourceUrl'],
        'checksum': !exists(json, 'checksum') ? undefined : json['checksum'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    };
}

export function VersionInfoToJSON(value?: VersionInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'changelog': value.changelog,
        'targetAbi': value.targetAbi,
        'sourceUrl': value.sourceUrl,
        'checksum': value.checksum,
        'timestamp': value.timestamp,
    };
}


