/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Class LibraryUpdateInfo.
 * @export
 * @interface LibraryUpdateInfo
 */
export interface LibraryUpdateInfo {
    /**
     * Gets or sets the folders added to.
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    foldersAddedTo?: Array<string> | null;
    /**
     * Gets or sets the folders removed from.
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    foldersRemovedFrom?: Array<string> | null;
    /**
     * Gets or sets the items added.
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    itemsAdded?: Array<string> | null;
    /**
     * Gets or sets the items removed.
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    itemsRemoved?: Array<string> | null;
    /**
     * Gets or sets the items updated.
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    itemsUpdated?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryUpdateInfo
     */
    collectionFolders?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof LibraryUpdateInfo
     */
    readonly isEmpty?: boolean;
}

export function LibraryUpdateInfoFromJSON(json: any): LibraryUpdateInfo {
    return LibraryUpdateInfoFromJSONTyped(json, false);
}

export function LibraryUpdateInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryUpdateInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'foldersAddedTo': !exists(json, 'FoldersAddedTo') ? undefined : json['FoldersAddedTo'],
        'foldersRemovedFrom': !exists(json, 'FoldersRemovedFrom') ? undefined : json['FoldersRemovedFrom'],
        'itemsAdded': !exists(json, 'ItemsAdded') ? undefined : json['ItemsAdded'],
        'itemsRemoved': !exists(json, 'ItemsRemoved') ? undefined : json['ItemsRemoved'],
        'itemsUpdated': !exists(json, 'ItemsUpdated') ? undefined : json['ItemsUpdated'],
        'collectionFolders': !exists(json, 'CollectionFolders') ? undefined : json['CollectionFolders'],
        'isEmpty': !exists(json, 'IsEmpty') ? undefined : json['IsEmpty'],
    };
}

export function LibraryUpdateInfoToJSON(value?: LibraryUpdateInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'FoldersAddedTo': value.foldersAddedTo,
        'FoldersRemovedFrom': value.foldersRemovedFrom,
        'ItemsAdded': value.itemsAdded,
        'ItemsRemoved': value.itemsRemoved,
        'ItemsUpdated': value.itemsUpdated,
        'CollectionFolders': value.collectionFolders,
    };
}


