/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NameGuidPair,
    NameGuidPairFromJSON,
    NameGuidPairFromJSONTyped,
    NameGuidPairToJSON,
} from './';

/**
 * 
 * @export
 * @interface QueryFilters
 */
export interface QueryFilters {
    /**
     * 
     * @type {Array<NameGuidPair>}
     * @memberof QueryFilters
     */
    genres?: Array<NameGuidPair> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof QueryFilters
     */
    tags?: Array<string> | null;
}

export function QueryFiltersFromJSON(json: any): QueryFilters {
    return QueryFiltersFromJSONTyped(json, false);
}

export function QueryFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryFilters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'genres': !exists(json, 'Genres') ? undefined : (json['Genres'] === null ? null : (json['Genres'] as Array<any>).map(NameGuidPairFromJSON)),
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}

export function QueryFiltersToJSON(value?: QueryFilters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Genres': value.genres === undefined ? undefined : (value.genres === null ? null : (value.genres as Array<any>).map(NameGuidPairToJSON)),
        'Tags': value.tags,
    };
}


