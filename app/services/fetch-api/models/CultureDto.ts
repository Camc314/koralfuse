/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Class CultureDto.
 * @export
 * @interface CultureDto
 */
export interface CultureDto {
    /**
     * Gets or sets the name.
     * @type {string}
     * @memberof CultureDto
     */
    name?: string | null;
    /**
     * Gets or sets the display name.
     * @type {string}
     * @memberof CultureDto
     */
    displayName?: string | null;
    /**
     * Gets or sets the name of the two letter ISO language.
     * @type {string}
     * @memberof CultureDto
     */
    twoLetterISOLanguageName?: string | null;
    /**
     * Gets or sets the name of the three letter ISO language.
     * @type {string}
     * @memberof CultureDto
     */
    readonly threeLetterISOLanguageName?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof CultureDto
     */
    threeLetterISOLanguageNames?: Array<string> | null;
}

export function CultureDtoFromJSON(json: any): CultureDto {
    return CultureDtoFromJSONTyped(json, false);
}

export function CultureDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CultureDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'displayName': !exists(json, 'DisplayName') ? undefined : json['DisplayName'],
        'twoLetterISOLanguageName': !exists(json, 'TwoLetterISOLanguageName') ? undefined : json['TwoLetterISOLanguageName'],
        'threeLetterISOLanguageName': !exists(json, 'ThreeLetterISOLanguageName') ? undefined : json['ThreeLetterISOLanguageName'],
        'threeLetterISOLanguageNames': !exists(json, 'ThreeLetterISOLanguageNames') ? undefined : json['ThreeLetterISOLanguageNames'],
    };
}

export function CultureDtoToJSON(value?: CultureDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'DisplayName': value.displayName,
        'TwoLetterISOLanguageName': value.twoLetterISOLanguageName,
        'ThreeLetterISOLanguageNames': value.threeLetterISOLanguageNames,
    };
}


