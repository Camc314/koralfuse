/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NameIdPair,
    NameIdPairFromJSON,
    NameIdPairFromJSONTyped,
    NameIdPairToJSON,
    NameValuePair,
    NameValuePairFromJSON,
    NameValuePairFromJSONTyped,
    NameValuePairToJSON,
    TunerChannelMapping,
    TunerChannelMappingFromJSON,
    TunerChannelMappingFromJSONTyped,
    TunerChannelMappingToJSON,
} from './';

/**
 * Channel mapping options dto.
 * @export
 * @interface ChannelMappingOptionsDto
 */
export interface ChannelMappingOptionsDto {
    /**
     * Gets or sets list of tuner channels.
     * @type {Array<TunerChannelMapping>}
     * @memberof ChannelMappingOptionsDto
     */
    tunerChannels?: Array<TunerChannelMapping> | null;
    /**
     * Gets or sets list of provider channels.
     * @type {Array<NameIdPair>}
     * @memberof ChannelMappingOptionsDto
     */
    providerChannels?: Array<NameIdPair> | null;
    /**
     * Gets or sets list of mappings.
     * @type {Array<NameValuePair>}
     * @memberof ChannelMappingOptionsDto
     */
    mappings?: Array<NameValuePair> | null;
    /**
     * Gets or sets provider name.
     * @type {string}
     * @memberof ChannelMappingOptionsDto
     */
    providerName?: string | null;
}

export function ChannelMappingOptionsDtoFromJSON(json: any): ChannelMappingOptionsDto {
    return ChannelMappingOptionsDtoFromJSONTyped(json, false);
}

export function ChannelMappingOptionsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelMappingOptionsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tunerChannels': !exists(json, 'TunerChannels') ? undefined : (json['TunerChannels'] === null ? null : (json['TunerChannels'] as Array<any>).map(TunerChannelMappingFromJSON)),
        'providerChannels': !exists(json, 'ProviderChannels') ? undefined : (json['ProviderChannels'] === null ? null : (json['ProviderChannels'] as Array<any>).map(NameIdPairFromJSON)),
        'mappings': !exists(json, 'Mappings') ? undefined : (json['Mappings'] === null ? null : (json['Mappings'] as Array<any>).map(NameValuePairFromJSON)),
        'providerName': !exists(json, 'ProviderName') ? undefined : json['ProviderName'],
    };
}

export function ChannelMappingOptionsDtoToJSON(value?: ChannelMappingOptionsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TunerChannels': value.tunerChannels === undefined ? undefined : (value.tunerChannels === null ? null : (value.tunerChannels as Array<any>).map(TunerChannelMappingToJSON)),
        'ProviderChannels': value.providerChannels === undefined ? undefined : (value.providerChannels === null ? null : (value.providerChannels as Array<any>).map(NameIdPairToJSON)),
        'Mappings': value.mappings === undefined ? undefined : (value.mappings === null ? null : (value.mappings as Array<any>).map(NameValuePairToJSON)),
        'ProviderName': value.providerName,
    };
}


