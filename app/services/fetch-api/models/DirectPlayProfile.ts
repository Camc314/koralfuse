/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DlnaProfileType,
    DlnaProfileTypeFromJSON,
    DlnaProfileTypeFromJSONTyped,
    DlnaProfileTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface DirectPlayProfile
 */
export interface DirectPlayProfile {
    /**
     * 
     * @type {string}
     * @memberof DirectPlayProfile
     */
    container?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DirectPlayProfile
     */
    audioCodec?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DirectPlayProfile
     */
    videoCodec?: string | null;
    /**
     * 
     * @type {DlnaProfileType}
     * @memberof DirectPlayProfile
     */
    type?: DlnaProfileType;
}

export function DirectPlayProfileFromJSON(json: any): DirectPlayProfile {
    return DirectPlayProfileFromJSONTyped(json, false);
}

export function DirectPlayProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectPlayProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'container': !exists(json, 'Container') ? undefined : json['Container'],
        'audioCodec': !exists(json, 'AudioCodec') ? undefined : json['AudioCodec'],
        'videoCodec': !exists(json, 'VideoCodec') ? undefined : json['VideoCodec'],
        'type': !exists(json, 'Type') ? undefined : DlnaProfileTypeFromJSON(json['Type']),
    };
}

export function DirectPlayProfileToJSON(value?: DirectPlayProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Container': value.container,
        'AudioCodec': value.audioCodec,
        'VideoCodec': value.videoCodec,
        'Type': DlnaProfileTypeToJSON(value.type),
    };
}


