/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DlnaProfileType,
    DlnaProfileTypeFromJSON,
    DlnaProfileTypeFromJSONTyped,
    DlnaProfileTypeToJSON,
    ProfileCondition,
    ProfileConditionFromJSON,
    ProfileConditionFromJSONTyped,
    ProfileConditionToJSON,
} from './';

/**
 * 
 * @export
 * @interface ContainerProfile
 */
export interface ContainerProfile {
    /**
     * 
     * @type {DlnaProfileType}
     * @memberof ContainerProfile
     */
    type?: DlnaProfileType;
    /**
     * 
     * @type {Array<ProfileCondition>}
     * @memberof ContainerProfile
     */
    conditions?: Array<ProfileCondition> | null;
    /**
     * 
     * @type {string}
     * @memberof ContainerProfile
     */
    container?: string | null;
}

export function ContainerProfileFromJSON(json: any): ContainerProfile {
    return ContainerProfileFromJSONTyped(json, false);
}

export function ContainerProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContainerProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'Type') ? undefined : DlnaProfileTypeFromJSON(json['Type']),
        'conditions': !exists(json, 'Conditions') ? undefined : (json['Conditions'] === null ? null : (json['Conditions'] as Array<any>).map(ProfileConditionFromJSON)),
        'container': !exists(json, 'Container') ? undefined : json['Container'],
    };
}

export function ContainerProfileToJSON(value?: ContainerProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Type': DlnaProfileTypeToJSON(value.type),
        'Conditions': value.conditions === undefined ? undefined : (value.conditions === null ? null : (value.conditions as Array<any>).map(ProfileConditionToJSON)),
        'Container': value.container,
    };
}


