/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SessionInfo,
    SessionInfoFromJSON,
    SessionInfoFromJSONTyped,
    SessionInfoToJSON,
    UserDto,
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface AuthenticationResult
 */
export interface AuthenticationResult {
    /**
     * 
     * @type {UserDto}
     * @memberof AuthenticationResult
     */
    user?: UserDto;
    /**
     * 
     * @type {SessionInfo}
     * @memberof AuthenticationResult
     */
    sessionInfo?: SessionInfo;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationResult
     */
    accessToken?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationResult
     */
    serverId?: string | null;
}

export function AuthenticationResultFromJSON(json: any): AuthenticationResult {
    return AuthenticationResultFromJSONTyped(json, false);
}

export function AuthenticationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticationResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'User') ? undefined : UserDtoFromJSON(json['User']),
        'sessionInfo': !exists(json, 'SessionInfo') ? undefined : SessionInfoFromJSON(json['SessionInfo']),
        'accessToken': !exists(json, 'AccessToken') ? undefined : json['AccessToken'],
        'serverId': !exists(json, 'ServerId') ? undefined : json['ServerId'],
    };
}

export function AuthenticationResultToJSON(value?: AuthenticationResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'User': UserDtoToJSON(value.user),
        'SessionInfo': SessionInfoToJSON(value.sessionInfo),
        'AccessToken': value.accessToken,
        'ServerId': value.serverId,
    };
}


