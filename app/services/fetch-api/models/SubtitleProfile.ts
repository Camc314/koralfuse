/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SubtitleDeliveryMethod,
    SubtitleDeliveryMethodFromJSON,
    SubtitleDeliveryMethodFromJSONTyped,
    SubtitleDeliveryMethodToJSON,
} from './';

/**
 * 
 * @export
 * @interface SubtitleProfile
 */
export interface SubtitleProfile {
    /**
     * 
     * @type {string}
     * @memberof SubtitleProfile
     */
    format?: string | null;
    /**
     * 
     * @type {SubtitleDeliveryMethod}
     * @memberof SubtitleProfile
     */
    method?: SubtitleDeliveryMethod;
    /**
     * 
     * @type {string}
     * @memberof SubtitleProfile
     */
    didlMode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SubtitleProfile
     */
    language?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SubtitleProfile
     */
    container?: string | null;
}

export function SubtitleProfileFromJSON(json: any): SubtitleProfile {
    return SubtitleProfileFromJSONTyped(json, false);
}

export function SubtitleProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubtitleProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'format': !exists(json, 'Format') ? undefined : json['Format'],
        'method': !exists(json, 'Method') ? undefined : SubtitleDeliveryMethodFromJSON(json['Method']),
        'didlMode': !exists(json, 'DidlMode') ? undefined : json['DidlMode'],
        'language': !exists(json, 'Language') ? undefined : json['Language'],
        'container': !exists(json, 'Container') ? undefined : json['Container'],
    };
}

export function SubtitleProfileToJSON(value?: SubtitleProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Format': value.format,
        'Method': SubtitleDeliveryMethodToJSON(value.method),
        'DidlMode': value.didlMode,
        'Language': value.language,
        'Container': value.container,
    };
}


