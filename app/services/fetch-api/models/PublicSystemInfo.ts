/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PublicSystemInfo
 */
export interface PublicSystemInfo {
    /**
     * Gets or sets the local address.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    localAddress?: string | null;
    /**
     * Gets or sets the name of the server.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    serverName?: string | null;
    /**
     * Gets or sets the server version.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    version?: string | null;
    /**
     * Gets or sets the product name. This is the AssemblyProduct name.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    productName?: string | null;
    /**
     * Gets or sets the operating system.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    operatingSystem?: string | null;
    /**
     * Gets or sets the id.
     * @type {string}
     * @memberof PublicSystemInfo
     */
    id?: string | null;
    /**
     * Gets or sets a value indicating whether the startup wizard is completed.
     * @type {boolean}
     * @memberof PublicSystemInfo
     */
    startupWizardCompleted?: boolean | null;
}

export function PublicSystemInfoFromJSON(json: any): PublicSystemInfo {
    return PublicSystemInfoFromJSONTyped(json, false);
}

export function PublicSystemInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicSystemInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'localAddress': !exists(json, 'LocalAddress') ? undefined : json['LocalAddress'],
        'serverName': !exists(json, 'ServerName') ? undefined : json['ServerName'],
        'version': !exists(json, 'Version') ? undefined : json['Version'],
        'productName': !exists(json, 'ProductName') ? undefined : json['ProductName'],
        'operatingSystem': !exists(json, 'OperatingSystem') ? undefined : json['OperatingSystem'],
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'startupWizardCompleted': !exists(json, 'StartupWizardCompleted') ? undefined : json['StartupWizardCompleted'],
    };
}

export function PublicSystemInfoToJSON(value?: PublicSystemInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'LocalAddress': value.localAddress,
        'ServerName': value.serverName,
        'Version': value.version,
        'ProductName': value.productName,
        'OperatingSystem': value.operatingSystem,
        'Id': value.id,
        'StartupWizardCompleted': value.startupWizardCompleted,
    };
}


