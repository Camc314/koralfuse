/* tslint:disable */
/* eslint-disable */
/**
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LogLevel,
    LogLevelFromJSON,
    LogLevelFromJSONTyped,
    LogLevelToJSON,
} from './';

/**
 * 
 * @export
 * @interface ActivityLogEntry
 */
export interface ActivityLogEntry {
    /**
     * Gets or sets the identifier.
     * @type {number}
     * @memberof ActivityLogEntry
     */
    id?: number;
    /**
     * Gets or sets the name.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    name?: string | null;
    /**
     * Gets or sets the overview.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    overview?: string | null;
    /**
     * Gets or sets the short overview.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    shortOverview?: string | null;
    /**
     * Gets or sets the type.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    type?: string | null;
    /**
     * Gets or sets the item identifier.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    itemId?: string | null;
    /**
     * Gets or sets the date.
     * @type {Date}
     * @memberof ActivityLogEntry
     */
    date?: Date;
    /**
     * Gets or sets the user identifier.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    userId?: string;
    /**
     * Gets or sets the user primary image tag.
     * @type {string}
     * @memberof ActivityLogEntry
     */
    userPrimaryImageTag?: string | null;
    /**
     * 
     * @type {LogLevel}
     * @memberof ActivityLogEntry
     */
    severity?: LogLevel;
}

export function ActivityLogEntryFromJSON(json: any): ActivityLogEntry {
    return ActivityLogEntryFromJSONTyped(json, false);
}

export function ActivityLogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityLogEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'overview': !exists(json, 'Overview') ? undefined : json['Overview'],
        'shortOverview': !exists(json, 'ShortOverview') ? undefined : json['ShortOverview'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'itemId': !exists(json, 'ItemId') ? undefined : json['ItemId'],
        'date': !exists(json, 'Date') ? undefined : (new Date(json['Date'])),
        'userId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'userPrimaryImageTag': !exists(json, 'UserPrimaryImageTag') ? undefined : json['UserPrimaryImageTag'],
        'severity': !exists(json, 'Severity') ? undefined : LogLevelFromJSON(json['Severity']),
    };
}

export function ActivityLogEntryToJSON(value?: ActivityLogEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Overview': value.overview,
        'ShortOverview': value.shortOverview,
        'Type': value.type,
        'ItemId': value.itemId,
        'Date': value.date === undefined ? undefined : (value.date.toISOString()),
        'UserId': value.userId,
        'UserPrimaryImageTag': value.userPrimaryImageTag,
        'Severity': LogLevelToJSON(value.severity),
    };
}


